{"version":3,"file":"static/js/392.5c8dc934.chunk.js","mappings":"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","sources":["components/Menu/MachinesMenu.tsx","components/AttendanceMachines/Machines.tsx","components/Header/HeaderBar.tsx","components/Logs/Logs.tsx","components/SnackBar/SnackBar.tsx"],"sourcesContent":["import * as React from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Menu from \"@mui/material/Menu\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport MoreVertIcon from \"@mui/icons-material/MoreVert\";\r\nimport InfoIcon from \"@mui/icons-material/Info\";\r\nimport HelpIcon from \"@mui/icons-material/Help\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\n\r\nimport { Grid, Typography } from \"@mui/material\";\r\n\r\nexport default function MachinesMenu() {\r\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n  const open = Boolean(anchorEl);\r\n  const handleClick = (event: React.MouseEvent<HTMLElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Typography\r\n        id=\"demo-positioned-button\"\r\n        aria-controls={open ? \"demo-positioned-menu\" : undefined}\r\n        aria-haspopup=\"true\"\r\n        aria-expanded={open ? \"true\" : undefined}\r\n        onClick={handleClick}\r\n      >\r\n        <MoreVertIcon fontSize=\"small\" />\r\n      </Typography>\r\n      <Menu\r\n        id=\"demo-positioned-menu\"\r\n        aria-labelledby=\"demo-positioned-button\"\r\n        anchorEl={anchorEl}\r\n        open={open}\r\n        onClose={handleClose}\r\n        anchorOrigin={{\r\n          vertical: \"top\",\r\n          horizontal: \"left\",\r\n        }}\r\n        transformOrigin={{\r\n          vertical: \"top\",\r\n          horizontal: \"left\",\r\n        }}\r\n      >\r\n        <Grid></Grid>\r\n        <MenuItem onClick={handleClose}>\r\n          {\" \"}\r\n          <Typography variant=\"caption\">\r\n            <EditIcon fontSize=\"small\" color=\"primary\" />\r\n          </Typography>{\" \"}\r\n          &nbsp;Edit\r\n        </MenuItem>\r\n        <MenuItem onClick={handleClose}>\r\n          {\" \"}\r\n          <Typography variant=\"caption\">\r\n            <DeleteIcon fontSize=\"small\" color=\"error\" />\r\n          </Typography>{\" \"}\r\n          &nbsp; Delete\r\n        </MenuItem>\r\n\r\n        <MenuItem onClick={handleClose}>\r\n          {\" \"}\r\n          <Typography variant=\"caption\">\r\n            <InfoIcon fontSize=\"small\" color=\"action\" />\r\n          </Typography>{\" \"}\r\n          &nbsp; info\r\n        </MenuItem>\r\n\r\n        <MenuItem onClick={handleClose}>\r\n          <Typography variant=\"caption\">\r\n            <HelpIcon fontSize=\"small\" color=\"action\" />\r\n          </Typography>{\" \"}\r\n          &nbsp; help\r\n        </MenuItem>\r\n      </Menu>\r\n    </div>\r\n  );\r\n}\r\n","import {\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Divider,\r\n  Grid,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DevicesIcon from \"@mui/icons-material/Devices\";\r\nimport ContentCopyIcon from \"@mui/icons-material/ContentCopy\";\r\nimport WarningAmberIcon from \"@mui/icons-material/WarningAmber\";\r\nimport FiberManualRecordIcon from \"@mui/icons-material/FiberManualRecord\";\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport FileCopyIcon from \"@mui/icons-material/FileCopy\";\r\nimport AdfScannerIcon from \"@mui/icons-material/AdfScanner\";\r\nimport Logs from \"../Logs/Logs\";\r\nimport MachinesMenu from \"../Menu/MachinesMenu\";\r\nimport { Machine } from \"../../Interfaces/Interface\";\r\nimport RadioSelect from \"../Reports/RadioSelect\";\r\nimport HeaderBar from \"../Header/HeaderBar\";\r\nimport { Route, Routes } from \"react-router-dom\";\r\nimport { paths } from \"../../routes/paths\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\nimport SnackBar from \"../SnackBar/SnackBar\";\r\n\r\ninterface MachinesProps {\r\n  MachinesInfo: Machine[];\r\n}\r\n\r\nconst Machines: React.FC<MachinesProps> = ({ MachinesInfo }) => {\r\n  const data = MachinesInfo;\r\n  const [isSnackbarOpen, setSnackbarOpen] = useState(false);\r\n  const [copiedItemId, setCopiedItemId] = useState<string>(\"\");\r\n  const [ViewItemId, setViewItemId] = useState<string | null>(null);\r\n\r\n  const [onStatusData, setOnStatusData] = useState<Machine[]>([]);\r\n  const [offStatusData, setOffStatusData] = useState<Machine[]>([]);\r\n\r\n  // console.log(data)\r\n\r\n  useEffect(() => {\r\n    const currentMoment = moment(); // Get the current date-time once\r\n\r\n    const newOnStatusData: Machine[] = [];\r\n    const newOffStatusData: Machine[] = [];\r\n\r\n    data.forEach((item: Machine) => {\r\n      // Parse the API date-time string using Moment.js\r\n      const apiMoment = moment(item.lastSyncDateTime);\r\n\r\n      // Check if the date, month, year, and hour are the same\r\n      // const isSameDateTime = currentMoment.isSame(apiMoment);\r\n\r\n      // Calculate the difference in minutes\r\n      const differenceInMinutes = currentMoment.diff(apiMoment, \"minutes\");\r\n\r\n      // Check if the difference is less than 10 minutes and the date, month, year, and hour are the same\r\n      if (Math.abs(differenceInMinutes) < 10) {\r\n        newOnStatusData.push(item);\r\n      } else {\r\n        newOffStatusData.push(item);\r\n      }\r\n    });\r\n\r\n    // Update the state variables with the new data\r\n    setOnStatusData(newOnStatusData);\r\n    setOffStatusData(newOffStatusData);\r\n\r\n    return () => {};\r\n  }, [data]);\r\n\r\n  useEffect(() => {\r\n    if (isSnackbarOpen) {\r\n      setTimeout(() => {\r\n        setSnackbarOpen(false);\r\n      }, 2000);\r\n    }\r\n    return () => {};\r\n  }, [isSnackbarOpen]);\r\n\r\n  const Navigate = useNavigate();\r\n\r\n  const handleCardClick = (guid: string) => {\r\n    Navigate(paths.ATTENDANCEREPORTS, { state: { Guid: guid } });\r\n  };\r\n  const color = (item: (typeof data)[0]) => {\r\n    if (item.temperature >= 55 || item.humidity >= 85) {\r\n      return \"border-2 border-red-500 scale-105 mx-1\";\r\n    } else if (\r\n      (item.temperature >= 45 && item.temperature < 55) ||\r\n      (item.humidity >= 75 && item.humidity < 85)\r\n    ) {\r\n      return \"border-2 border-amber-500 scale-105 mx-1\";\r\n    } else {\r\n      return \" \";\r\n    }\r\n  };\r\n  let textToCopy = \"\";\r\n  const handleCopyClick = (guid: string) => {\r\n    const entryWithId = data.find((item) => item.guid === guid);\r\n    if (entryWithId) {\r\n      const macForId = entryWithId.mac;\r\n      // textToCopy = entryWithId.mac;\r\n      setCopiedItemId(macForId);\r\n      navigator.clipboard.writeText(entryWithId.mac);\r\n      setSnackbarOpen(true);\r\n    } else {\r\n      console.log(`No entry found with id ${entryWithId}`);\r\n    }\r\n  };\r\n\r\n  const handleviewlogs = (guid: string) => {\r\n    setViewItemId(guid);\r\n  };\r\n  const handleSnackbarClose = () => {\r\n    setSnackbarOpen(false);\r\n  };\r\n  const renderMachineCard = (SectionData: typeof data, status: boolean) => (\r\n    <Grid container spacing={2} sx={{ paddingX: 4, paddingY: 2 }}>\r\n      {SectionData.map((item, index) => (\r\n        <Grid\r\n          item\r\n          key={item.guid}\r\n          xs={12}\r\n          sm={6}\r\n          md={4}\r\n          lg={3}\r\n          sx={{}}\r\n          className=\"\"\r\n        >\r\n          <Card className={color(item)}>\r\n            <CardContent sx={{}} className=\"\">\r\n              <Grid\r\n                container\r\n                spacing={2}\r\n                //   alignItems=\"center\"\r\n                className=\"flex flex-row \"\r\n              >\r\n                <Grid\r\n                  md={12}\r\n                  sx={{ paddingLeft: 2, paddingTop: 2 }}\r\n                  className=\" flex flex-row \"\r\n                >\r\n                  <Grid\r\n                    item\r\n                    sx={{ paddingBottom: 2, marginLeft: 2 }}\r\n                    className=\"\"\r\n                    onClick={() => handleCardClick(item.guid)}\r\n                  >\r\n                    {/* <AdfScannerIcon sx={{ height: 40, width: 40 }} /> */}\r\n                    <DevicesIcon sx={{ height: 40, width: 40 }} />\r\n                  </Grid>\r\n                  <Grid item md={10} sx={{ marginLeft: 4 }} className=\"\">\r\n                    <Grid\r\n                      container\r\n                      md={12}\r\n                      className=\"flex flex-row \"\r\n                      onClick={() => handleCardClick(item.guid)}\r\n                    >\r\n                      <Typography variant=\"body1\" component=\"div\">\r\n                        Machine {index + 1} &nbsp;\r\n                      </Typography>\r\n                      <Typography\r\n                        variant=\"body1\"\r\n                        color=\"text.secondary\"\r\n                        component=\"div\"\r\n                      >\r\n                        {item.location}\r\n                      </Typography>\r\n                    </Grid>\r\n                    <Grid container className=\"\" alignItems=\"center\">\r\n                      <Typography\r\n                        variant=\"caption\"\r\n                        color=\"text.secondary\"\r\n                        component=\"div\"\r\n                        sx={{ fontStyle: \"italic\" }}\r\n                      >\r\n                        Mac: {item.mac}\r\n                      </Typography>\r\n\r\n                      <Typography>\r\n                        <IconButton onClick={() => handleCopyClick(item.guid)}>\r\n                          <ContentCopyIcon\r\n                            color=\"primary\"\r\n                            sx={{ height: 15, width: 15, marginTop: \"-4px\" }}\r\n                          />\r\n                        </IconButton>\r\n                      </Typography>\r\n\r\n                      {/* <Typography variant=\"caption\" className=\"\" sx={{textAlign:\"right\"}}>\r\n                        <DeviceThermostatIcon fontSize=\"small\"/>\r\n                        {item.temp}\r\n                      </Typography> */}\r\n                    </Grid>\r\n                    <Grid\r\n                      container\r\n                      md={9}\r\n                      onClick={() => handleCardClick(item.guid)}\r\n                    >\r\n                      <Typography\r\n                        variant=\"caption\"\r\n                        color=\"text.secondary\"\r\n                        component=\"div\"\r\n                        sx={{ marginTop: \"-8px\" }}\r\n                        onClick={() => handleCardClick(item.guid)}\r\n                      >\r\n                        {item.ip}\r\n                      </Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Typography className=\"\">\r\n                    <MachinesMenu />\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid\r\n                  md={12}\r\n                  sx={{ paddingLeft: 2, marginBottom: -2 }}\r\n                  className=\" flex flex-row \"\r\n                >\r\n                  <Grid\r\n                    item\r\n                    sx={{ marginLeft: 1.5, marginTop: 3 }}\r\n                    className=\"\"\r\n                    onClick={() => handleCardClick(item.guid)}\r\n                  >\r\n                    <Typography variant=\"body2\">\r\n                      {status ? (\r\n                        <>\r\n                          <FiberManualRecordIcon style={{ color: \"#4bd16f\" }} />\r\n                          On\r\n                        </>\r\n                      ) : (\r\n                        <>\r\n                          <WarningAmberIcon style={{ color: \"red\" }} />\r\n                          Off\r\n                        </>\r\n                      )}\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid\r\n                    item\r\n                    sx={{ paddingLeft: 2, marginLeft: 2 }}\r\n                    className=\" \"\r\n                    onClick={() => handleCardClick(item.guid)}\r\n                  >\r\n                    <Typography\r\n                      variant=\"caption\"\r\n                      color=\"text.secondary\"\r\n                      component=\"div\"\r\n                      sx={{ marginLeft: 0.5 }}\r\n                    >\r\n                      Synced : {item.lastSyncDateTime}\r\n                    </Typography>\r\n                    <Grid container className=\" flex flex-row\">\r\n                      <Grid className=\"\" sx={{ paddingRight: 1 }}>\r\n                        <Typography\r\n                          variant=\"caption\"\r\n                          sx={{\r\n                            color:\r\n                              item.temperature >= 45 && item.temperature < 55\r\n                                ? \"#FFBA00\"\r\n                                : item.temperature >= 55\r\n                                ? \"red\"\r\n                                : \"\",\r\n                            fontStyle: \"italic\",\r\n                          }}\r\n                        >\r\n                          {/* <DeviceThermostatIcon fontSize=\"small\"/> */}\r\n                          Temp : {item.temperature}°C ;\r\n                        </Typography>\r\n                      </Grid>\r\n                      <Grid className=\"\">\r\n                        <Typography\r\n                          variant=\"caption\"\r\n                          sx={{\r\n                            color:\r\n                              item.humidity >= 75 && item.humidity < 85\r\n                                ? \"#FFBA00\"\r\n                                : item.humidity >= 85\r\n                                ? \"red\"\r\n                                : \"\",\r\n                            fontStyle: \"italic\",\r\n                          }}\r\n                        >\r\n                          {/* <WaterDropIcon fontSize=\"small\" /> */}\r\n                          Humidity : {item.humidity}%\r\n                        </Typography>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </CardContent>\r\n\r\n            <CardActions className=\" \">\r\n              <Typography\r\n                onClick={() => handleviewlogs(item.guid)}\r\n                sx={{ textAlign: \"right\" }}\r\n                className=\" max-w-xs\t\"\r\n              >\r\n                <Divider />\r\n                <Logs\r\n                  index={index}\r\n                  subtitle={item.location}\r\n                  ControllerGuid={item.guid}\r\n                />\r\n              </Typography>\r\n            </CardActions>\r\n          </Card>\r\n        </Grid>\r\n      ))}\r\n    </Grid>\r\n  );\r\n\r\n  return (\r\n    <Grid container spacing={2} sx={{ padding: 4 }}>\r\n      {onStatusData.length !== 0 ? (\r\n        <>\r\n          <Typography variant=\"h5\" sx={{ padding: 2 }}>\r\n            On Machines\r\n          </Typography>\r\n          {renderMachineCard(onStatusData, true)}\r\n        </>\r\n      ) : null}\r\n\r\n      {offStatusData.length !== 0 ? (\r\n        <>\r\n          <Typography variant=\"h5\" sx={{ padding: 2 }}>\r\n            Off Machines\r\n          </Typography>\r\n          {renderMachineCard(offStatusData, false)}\r\n        </>\r\n      ) : null}\r\n\r\n      {/* <Snackbar\r\n        open={isSnackbarOpen}\r\n        autoHideDuration={2000}\r\n        onClose={handleSnackbarClose}\r\n        message={`Copied to clipboard! (Mac : ${copiedItemId})`}\r\n        action={\r\n          <IconButton\r\n            size=\"small\"\r\n            color=\"inherit\"\r\n            onClick={handleSnackbarClose}\r\n          >\r\n            <FileCopyIcon fontSize=\"small\" />\r\n          </IconButton>\r\n        }\r\n      /> */}\r\n      <SnackBar\r\n        ope={isSnackbarOpen}\r\n        mes={`Copied to clipboard! (Mac : ${copiedItemId})`}\r\n      />\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Machines;\r\n","import { Typography } from '@mui/material'\r\nimport Grid from '@mui/material/Grid'\r\nimport React from 'react'\r\n\r\ninterface HeaderbarProps {\r\n  name:string\r\n  subtitle:string\r\n}\r\n\r\nconst HeaderBar:React.FC<HeaderbarProps> = ({name,subtitle}) => {\r\n  return (\r\n    <Grid\r\n          data-testid=\"fc-header-panel\"\r\n          container\r\n          direction=\"row\"\r\n          justifyContent=\"center\"\r\n          alignItems=\"center\"\r\n          className=\"header-panel\"\r\n          sx={{ padding: 2, background: '#EAEAEA' }}\r\n        >\r\n          <Grid item xs={12}  >\r\n            <Typography variant=\"h5\" align='center' sx={{ }} >\r\n              {/* {title} */}\r\n              {name}\r\n              \r\n            </Typography >\r\n            <Typography variant=\"body2\" align='center' color=\"text.secondary\">\r\n            {subtitle}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={6} sx={{ textAlign: 'right' }}>\r\n            {/* {!!HeaderComponent && <HeaderComponent />} */}\r\n          </Grid>\r\n        </Grid>\r\n  )\r\n}\r\n\r\nexport default HeaderBar","import * as React from \"react\";\r\nimport AppBar from \"@mui/material/AppBar\";\r\nimport Box from \"@mui/material/Box\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport DevicesIcon from \"@mui/icons-material/Devices\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport Drawer from \"@mui/material/Drawer\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport InboxIcon from \"@mui/icons-material/MoveToInbox\";\r\nimport List from \"@mui/material/List\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport ListItemButton from \"@mui/material/ListItemButton\";\r\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport MailIcon from \"@mui/icons-material/Mail\";\r\nimport MenuIcon from \"@mui/icons-material/Menu\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { Button, Grid, Link } from \"@mui/material\";\r\nimport HeaderBar from \"../Header/HeaderBar\";\r\n\r\nconst drawerWidth = 540;\r\n\r\ninterface Props {\r\n\r\nindex:number\r\nsubtitle:string\r\nControllerGuid:string\r\n\r\n  window?: () => Window;\r\n}\r\n\r\ninterface functions {\r\n  name: string;\r\n  path: string;\r\n}\r\n\r\n\r\nconst Logs = (props: Props) => {\r\n  const MachineName = `Machine ${props.index+1}`\r\n  const { window } = props;\r\n  const [mobileOpen, setMobileOpen] = React.useState(false);\r\n  const [IsOpen, SetIsOpen] = React.useState(false);\r\n\r\n  const handleDrawerToggle = () => {\r\n    \r\n    SetIsOpen(!IsOpen);\r\n    setMobileOpen(!mobileOpen)\r\n  };\r\n\r\n  const drawer = (\r\n    <div>\r\n        <HeaderBar name={MachineName} subtitle={props.subtitle}/>\r\n        <Typography>\r\n          {props.ControllerGuid}\r\n        </Typography>\r\n    </div>\r\n  );\r\n\r\n  // Remove this const when copying and pasting into your project.\r\n  const container =\r\n    window !== undefined ? () => window().document.body : undefined;\r\n\r\n  return (\r\n    \r\n        <span>\r\n        {/* <Grid item md={6} className=\"border border-black\"> */}\r\n         <Typography\r\n                    variant=\"caption\"\r\n                    color=\"text.secondary\"\r\n                    // component=\"div\"\r\n                    className=\"\"\r\n                \r\n                  >\r\n        <Button variant=\"text\" onClick={handleDrawerToggle }  >\r\n            <Typography variant=\"caption\">\r\n                view logs\r\n            </Typography>\r\n        </Button>\r\n        </Typography>\r\n        {/* </Grid> */}\r\n      <Box sx={{ display: \"flex\" }}>\r\n     \r\n        {/* <CssBaseline /> */}\r\n\r\n        <Box\r\n          component=\"nav\"\r\n          sx={{ width: { sm: drawerWidth }, flexShrink: { sm: 0 } }}\r\n          aria-label=\"mailbox folders\"\r\n        >\r\n          <Drawer\r\n            anchor=\"right\"\r\n            container={container}\r\n            variant=\"temporary\"\r\n            open={mobileOpen}\r\n            onClose={handleDrawerToggle}\r\n            ModalProps={{\r\n              keepMounted: true,\r\n            }}\r\n            sx={{\r\n              display: { xs: \"block\", sm: \"none\" },\r\n              \"& .MuiDrawer-paper\": {\r\n                boxSizing: \"border-box\",\r\n                width: 300,\r\n              },\r\n              // Set anchor to \"right\" to make the drawer slide out from the right\r\n              \"& .MuiDrawer-paperAnchorRight\": { borderLeft: \"none\" },\r\n            }}\r\n          >\r\n            {drawer}\r\n          </Drawer>\r\n          <Drawer\r\n            variant=\"temporary\"\r\n            open={IsOpen}\r\n            anchor=\"right\"\r\n            onClose={handleDrawerToggle}\r\n            sx={{\r\n              display: { xs: \"none\", sm: \"block\" },\r\n              \"& .MuiDrawer-paper\": {\r\n                boxSizing: \"border-box\",\r\n                width: drawerWidth,\r\n              },\r\n              // Set anchor to \"right\" to make the drawer slide out from the right\r\n              \"& .MuiDrawer-paperAnchorRight\": { borderLeft: \"none\" },\r\n            }}\r\n          >\r\n            {drawer}\r\n          </Drawer>\r\n        </Box>\r\n        {/* <Box\r\n          component=\"main\"\r\n          sx={{ flexGrow: 1, p: 3, width: { sm: `calc(100% - ${drawerWidth}px)` } }}\r\n        >\r\n           <Toolbar /> \r\n         \r\n        </Box> */}\r\n      </Box>\r\n      </span>\r\n    \r\n  );\r\n};\r\n\r\nexport default Logs;\r\n","import { Snackbar } from '@mui/material'\r\nimport React, { useState } from 'react'\r\n\r\ninterface SnackbarProps{\r\nmes:string,\r\nope:boolean\r\n}\r\n\r\n\r\nconst SnackBar:React.FC<SnackbarProps>=({ope, mes}) => {\r\n\r\n    // const [open,setopen]=useState<boolean>(ope)\r\n\r\n    // const handleSnackbarClose = () => {\r\n    //     setopen(!open);\r\n    //   };\r\n  return (\r\n    <Snackbar\r\n        open={ope}\r\n        // autoHideDuration={2000}\r\n        // onClose={handleSnackbarClose}\r\n        message={mes}\r\n        \r\n      />\r\n  )\r\n}\r\n\r\nexport default SnackBar;"],"names":["MachinesMenu","anchorEl","setAnchorEl","React","open","Boolean","handleClose","_jsxs","children","_jsx","Typography","id","undefined","onClick","event","currentTarget","MoreVertIcon","fontSize","Menu","onClose","anchorOrigin","vertical","horizontal","transformOrigin","Grid","MenuItem","variant","EditIcon","color","DeleteIcon","InfoIcon","HelpIcon","_ref","MachinesInfo","data","isSnackbarOpen","setSnackbarOpen","useState","copiedItemId","setCopiedItemId","ViewItemId","setViewItemId","onStatusData","setOnStatusData","offStatusData","setOffStatusData","useEffect","currentMoment","moment","newOnStatusData","newOffStatusData","forEach","item","apiMoment","lastSyncDateTime","differenceInMinutes","diff","Math","abs","push","setTimeout","Navigate","useNavigate","handleCardClick","guid","paths","ATTENDANCEREPORTS","state","Guid","temperature","humidity","renderMachineCard","SectionData","status","container","spacing","sx","paddingX","paddingY","map","index","xs","sm","md","lg","className","Card","CardContent","paddingLeft","paddingTop","paddingBottom","marginLeft","DevicesIcon","height","width","component","location","alignItems","fontStyle","mac","IconButton","entryWithId","find","macForId","navigator","clipboard","writeText","console","log","concat","handleCopyClick","ContentCopyIcon","marginTop","ip","marginBottom","_Fragment","FiberManualRecordIcon","style","WarningAmberIcon","paddingRight","CardActions","handleviewlogs","textAlign","Divider","Logs","subtitle","ControllerGuid","padding","length","SnackBar","ope","mes","name","direction","justifyContent","background","align","props","MachineName","window","mobileOpen","setMobileOpen","IsOpen","SetIsOpen","handleDrawerToggle","drawer","HeaderBar","document","body","Button","Box","display","flexShrink","Drawer","anchor","ModalProps","keepMounted","boxSizing","borderLeft","Snackbar","message"],"sourceRoot":""}