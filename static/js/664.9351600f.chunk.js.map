{"version":3,"file":"static/js/664.9351600f.chunk.js","mappings":"sLASA,MAkBA,EAlBuCA,IAAiB,IAAhB,IAACC,EAAG,IAAEC,GAAIF,EAOhD,OACEG,EAAAA,EAAAA,KAACC,EAAAA,EAAQ,CACLC,KAAMJ,EAGNK,QAASJ,GAET,C,yFCnBR,MAgCA,EAhCsBK,KAElB,MAAOF,EAAKG,IAASC,EAAAA,EAAAA,WAAkB,GAsBzC,OAXEC,EAAAA,EAAAA,YAAU,KACNC,YAAW,KAEPH,GAASH,EAAK,GAEb,KACA,SAGN,CAACA,KAGJO,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACQV,EAAAA,EAAAA,KAACW,EAAAA,EAAM,CAACC,QAtBIC,KAChBR,GAASH,EAAK,EAqBoBQ,SAAC,WAC/BV,EAAAA,EAAAA,KAACc,EAAAA,EAAQ,CAACf,IAAI,QAASD,IAAKI,MAC9B,C","sources":["components/SnackBar/SnackBar.tsx","components/test/Test.tsx"],"sourcesContent":["import { Snackbar } from '@mui/material'\r\nimport React, { useState } from 'react'\r\n\r\ninterface SnackbarProps{\r\nmes:string,\r\nope:boolean\r\n}\r\n\r\n\r\nconst SnackBar:React.FC<SnackbarProps>=({ope, mes}) => {\r\n\r\n    // const [open,setopen]=useState<boolean>(ope)\r\n\r\n    // const handleSnackbarClose = () => {\r\n    //     setopen(!open);\r\n    //   };\r\n  return (\r\n    <Snackbar\r\n        open={ope}\r\n        // autoHideDuration={2000}\r\n        // onClose={handleSnackbarClose}\r\n        message={mes}\r\n        \r\n      />\r\n  )\r\n}\r\n\r\nexport default SnackBar;","import React, { useEffect, useState } from 'react'\r\nimport SnackBar from '../SnackBar/SnackBar'\r\nimport { Button } from '@mui/material'\r\n\r\nconst Test:React.FC = () => {\r\n\r\n    const [open,setopen]=useState<boolean>(false)\r\n\r\n    const handleSubmit =()=>{\r\n        setopen(!open)\r\n        // Set a timeout to fetch data every 5 seconds\r\n  \r\n        // alert(\"clicked\")\r\n        \r\n    }\r\n   \r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            // fetchDataWithTimeout();\r\n            setopen(!open)\r\n    \r\n          }, 2000);\r\n      return () => {\r\n      \r\n      }\r\n    }, [open])\r\n    \r\n  return (\r\n    <div>\r\n            <Button onClick={handleSubmit}>Click</Button>\r\n            <SnackBar mes=\"hello\"  ope={open}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Test"],"names":["_ref","ope","mes","_jsx","Snackbar","open","message","Test","setopen","useState","useEffect","setTimeout","_jsxs","children","Button","onClick","handleSubmit","SnackBar"],"sourceRoot":""}