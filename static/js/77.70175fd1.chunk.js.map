{"version":3,"file":"static/js/77.70175fd1.chunk.js","mappings":"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","sources":["components/Reports/AttendanceReport/AttendanceReport.tsx","../node_modules/@mui/icons-material/CheckCircleOutline.js","../node_modules/@mui/icons-material/Close.js"],"sourcesContent":["import {\r\n  Box,\r\n  Button,\r\n  Grid,\r\n  MenuItem,\r\n  TextField,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport React, { useEffect } from \"react\";\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport CheckCircleOutlineIcon from '@mui/icons-material/CheckCircleOutline';\r\nimport FileDownloadOutlinedIcon from \"@mui/icons-material/FileDownloadOutlined\";\r\nimport { AdapterDayjs } from \"@mui/x-date-pickers/AdapterDayjs\";\r\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\r\nimport { DateTimePicker } from \"@mui/x-date-pickers/DateTimePicker\";\r\nimport { DataGrid, GridColDef, GridRenderCellParams } from \"@mui/x-data-grid\";\r\n\r\nimport { DemoContainer } from \"@mui/x-date-pickers/internals/demo\";\r\nimport { Machine } from \"../../../Interfaces/Interface\";\r\nimport moment from \"moment\";\r\nimport dayjs, { Dayjs } from \"dayjs\";\r\n\r\ninterface AttendanceReportsprops {\r\n  Machines: Machine[];\r\n  ControllerGuid?: string;\r\n}\r\n\r\ninterface FormState {\r\n  ControllerGuid: string;\r\n  StartDate: string;\r\n  EndDate: string;\r\n}\r\n\r\ninterface GetControllerAttendanceLogs {\r\n  guid: string;\r\n  controllerGuid: string;\r\n  terminalIP: number;\r\n  location: string;\r\n  rfidSerial: string;\r\n  sewadarId: number;\r\n  attendanceDate: string;\r\n  isSynced: boolean;\r\n  dateSynced: string;\r\n}\r\nconst duration = [\r\n  { id: 1, label: \"Last 2 hrs\", value: \"2hrs\" },\r\n  { id: 2, label: \"Last 24 hrs\", value: \"24hrs\" },\r\n  { id: 3, label: \"Last 7 days\", value: \"7days\" },\r\n  { id: 4, label: \"Custom\", value: \"cust\" },\r\n];\r\nconst columns: GridColDef[] = [\r\n  {\r\n    field: \"rfidSerial\",\r\n    headerName: \"Rfid Serial\",\r\n    width: 220,\r\n    disableColumnMenu: true,\r\n    headerAlign: \"center\",\r\n    align: \"center\",\r\n    renderCell: (params: GridRenderCellParams) => (\r\n      // <div style={{ whiteSpace: \"nowrap\" }}>{params.value}</div>\r\n      <Grid item >\r\n      <Typography variant=\"body1\" align=\"center\">\r\n        {params.value}\r\n      </Typography>\r\n    </Grid>\r\n    ),\r\n  },\r\n  {\r\n    field: \"attendanceDate\",\r\n    headerName: \"Attendance Date\",\r\n    width: 220,\r\n    disableColumnMenu: true,\r\n    headerAlign: \"center\",\r\n    align: \"center\",\r\n    renderCell: (params: GridRenderCellParams) => (\r\n      // <div style={{ whiteSpace: \"nowrap\" }}>{params.value}</div>\r\n      <Grid item >\r\n      <Typography variant=\"body1\" align=\"center\">\r\n        {params.value}\r\n      </Typography>\r\n    </Grid>\r\n    ),\r\n  },\r\n  {\r\n    field: \"isSynced\",\r\n    headerName: \"Is Synced\",\r\n    width: 180,\r\n    disableColumnMenu: true,\r\n    headerClassName: \"text-center\",\r\n    headerAlign: \"center\",\r\n    align: \"center\",\r\n    renderCell: (params: GridRenderCellParams) => (\r\n      <div style={{ whiteSpace: \"nowrap\" }}>{params.value ? (<div><CheckCircleOutlineIcon style={{ color: \"#40bf40\t\t\" }}/></div> ):(<div><CloseIcon style={{ color: \"red\" }}/></div>)}</div>\r\n    ),\r\n  },\r\n  {\r\n    field: \"terminalIP\",\r\n    headerName: \"Terminal IP\",\r\n    width: 220,\r\n    disableColumnMenu: true,\r\n    headerClassName: \"text-center\",\r\n    headerAlign: \"center\",\r\n    align: \"center\",\r\n    renderCell: (params: GridRenderCellParams) => (\r\n      // <div style={{ whiteSpace: \"nowrap\" }}>{params.value}</div>\r\n      <Grid item >\r\n      <Typography variant=\"body1\" align=\"center\">\r\n        {params.value}\r\n      </Typography>\r\n    </Grid>\r\n    ),\r\n    \r\n  },\r\n  {\r\n    field: \"sewadarId\",\r\n    headerName: \"Sewadar Id\",\r\n    headerAlign: \"center\",\r\n    align: \"center\",\r\n    type: \"number\",\r\n    width: 220,\r\n    disableColumnMenu: true,\r\n    // renderCell: (params: GridRenderCellParams) => (\r\n    //   <div>\r\n    //     <Switch\r\n    //       checked={params.row.isValid}\r\n    //       // onChange={() => handleSwitchChange(params.row.id)}\r\n    //     />\r\n    //   </div>\r\n    // ),\r\n    renderCell: (params: GridRenderCellParams) => (\r\n      // <div style={{ whiteSpace: \"nowrap\" }}>{params.value}</div>\r\n      <Grid item >\r\n      <Typography variant=\"body1\" align=\"center\">\r\n        {params.value}\r\n      </Typography>\r\n    </Grid>\r\n    ),\r\n  },\r\n];\r\n\r\nconst AttendanceReport: React.FC<AttendanceReportsprops> = ({\r\n  Machines,\r\n  ControllerGuid,\r\n}) => {\r\n  const [rows, setRows] = React.useState<GetControllerAttendanceLogs[]>([]);\r\n\r\n  const newArrayWithId = rows.map((obj, index) => ({\r\n    ...obj,\r\n    id: index + 1,\r\n  }));\r\n\r\n  const MatchedItem = Machines.find((item) => item.guid === ControllerGuid);\r\n\r\n  const currentDateTime = dayjs().format(\"YYYY-MM-DD HH:mm:ss\");\r\n  const currDate = dayjs();\r\n  const pastDateTime = currDate.subtract(2, \"hour\");\r\n  const FormattedpastDateTime = pastDateTime.format(\"YYYY-MM-DD HH:mm:ss\");\r\n  const [selectedDuration, setSelectedDuration] = React.useState(\r\n    duration[0].value\r\n  );\r\n\r\n  const [formState, setFormState] = React.useState<FormState>({\r\n    // ControllerGuid:     MatchedItem ? MatchedItem.guid : Machines[0].guid ,\r\n    ControllerGuid: MatchedItem\r\n      ? MatchedItem.guid\r\n      : Machines.length > 0\r\n      ? Machines[0].guid\r\n      : \"\",\r\n    // ControllerGuid: \"\",\r\n\r\n    StartDate: FormattedpastDateTime,\r\n    EndDate: currentDateTime,\r\n  });\r\n\r\n  document.title = \"Attendance Reports\";\r\n  const DurationChange = () => {\r\n    setFormState((prevFormState) => {\r\n      if (selectedDuration === \"2hrs\") {\r\n        const twoHoursEarlier = currDate.subtract(2, \"hour\");\r\n\r\n        return { ...prevFormState, StartDate: formatDateTime(twoHoursEarlier) };\r\n      } else if (selectedDuration === \"24hrs\") {\r\n        const OneDayEarlier = currDate.subtract(1, \"day\");\r\n\r\n        return { ...prevFormState, StartDate: formatDateTime(OneDayEarlier) };\r\n      } else if (selectedDuration === \"7days\") {\r\n        const SevenDaysEarlier = currDate.subtract(7, \"day\");\r\n\r\n        return {\r\n          ...prevFormState,\r\n          StartDate: formatDateTime(SevenDaysEarlier),\r\n        };\r\n      }\r\n\r\n      return prevFormState;\r\n    });\r\n  };\r\n  const handleDurationChange = (event: {\r\n    target: { value: React.SetStateAction<string> };\r\n  }) => {\r\n    setSelectedDuration(event.target.value);\r\n  };\r\n  const handleMachineChange = (event: { target: { value: string } }) => {\r\n    setFormState({ ...formState, ControllerGuid: event.target.value });\r\n  };\r\n  const host: string = process.env.REACT_APP_API_ENDPOINT ?? \"\";\r\n\r\n  const apiUrl: string = host + \"/api/Attendance/GetControllerAttendanceLogs\";\r\n\r\n  async function postData(url: string, data: FormState): Promise<any> {\r\n    try {\r\n      const response = await fetch(url, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          // You can add other headers as needed\r\n        },\r\n        body: JSON.stringify(data),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorResponse = await response.json();\r\n        throw new Error(\r\n          `HTTP error! Status: ${response.status}. Message: ${errorResponse.message}`\r\n        );\r\n      }\r\n\r\n      const result = await response.json();\r\n      setRows(result.data);\r\n      return result;\r\n    } catch (error) {\r\n      console.error(\"Error:\", error);\r\n\r\n      if (\r\n        error instanceof TypeError &&\r\n        error.message.includes(\"Failed to fetch\")\r\n      ) {\r\n        console.error(\"Network error. Please check your internet connection.\");\r\n      }\r\n\r\n      alert(\"unable to fetch data\");\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  const handleSubmit = () => {\r\n    // DurationChange()\r\n    try {\r\n      const result = postData(apiUrl, formState);\r\n    } catch (error) {\r\n      console.error(\"Error:\", error);\r\n    }\r\n  };\r\n\r\n  const handleToDateTimeChange = (newDate: Dayjs | null) => {\r\n    setFormState({ ...formState, EndDate: formatDateTime(newDate) });\r\n  };\r\n  const handleFromDateTimeChange = (newDate: Dayjs | null) => {\r\n    setFormState({ ...formState, StartDate: formatDateTime(newDate) });\r\n  };\r\n\r\n  const formatDateTime = (dateTime: Dayjs | null) => {\r\n    return dateTime ? dayjs(dateTime).format(\"YYYY-MM-DD HH:mm:ss\") : \"\";\r\n  };\r\n\r\n  const shouldDisableButton = formState.ControllerGuid.length <= 0;\r\n\r\n  useEffect(() => {\r\n    DurationChange();\r\n  }, [selectedDuration, rows]);\r\n\r\n  return (\r\n    <Grid container spacing={2} className=\" p-2\">\r\n      <Grid item xs={12} sm={4} md={4} lg={4} xl={2.5}>\r\n        <TextField\r\n          select\r\n          label=\"Machine\"\r\n          sx={{}}\r\n          value={formState.ControllerGuid}\r\n          onChange={handleMachineChange}\r\n          fullWidth\r\n        >\r\n          {Machines.map((option, index) => (\r\n            <MenuItem key={option.guid} value={option.guid}>\r\n              Machine {index + 1}&nbsp;{option.location}\r\n            </MenuItem>\r\n          ))}\r\n        </TextField>\r\n      </Grid>\r\n      <Grid item xs={12} sm={4} md={4} lg={4} xl={1.5}>\r\n        <TextField\r\n          select\r\n          label=\"Duration\"\r\n          value={selectedDuration}\r\n          onChange={handleDurationChange}\r\n          sx={{ width: \"100%\" }}\r\n          fullWidth\r\n        >\r\n          {duration.map((option) => (\r\n            <MenuItem key={option.id} value={option.value}>\r\n              {option.label}\r\n            </MenuItem>\r\n          ))}\r\n        </TextField>\r\n      </Grid>\r\n      {selectedDuration === \"cust\" ? (\r\n        <>\r\n          <Grid item xs={12} sm={2} md={2} lg={2} xl={3} sx={{ marginTop: -1 }}>\r\n            <LocalizationProvider dateAdapter={AdapterDayjs}>\r\n              <DemoContainer components={[\"DateTimePicker\"]}>\r\n                <DateTimePicker\r\n                  label=\"From date\"\r\n                  value={dayjs(formState.StartDate)}\r\n                  onChange={handleFromDateTimeChange}\r\n                />\r\n              </DemoContainer>\r\n            </LocalizationProvider>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            sm={2}\r\n            md={2}\r\n            lg={2}\r\n            xl={3}\r\n            className=\"\"\r\n            sx={{ marginTop: -1 }}\r\n          >\r\n            <LocalizationProvider dateAdapter={AdapterDayjs}>\r\n              <DemoContainer components={[\"DateTimePicker\"]}>\r\n                <DateTimePicker\r\n                  label=\"To date\"\r\n                  value={dayjs(formState.EndDate)}\r\n                  onChange={handleToDateTimeChange}\r\n                />\r\n              </DemoContainer>\r\n            </LocalizationProvider>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            sm={2}\r\n            md={2}\r\n            lg={2}\r\n            xl={1.5}\r\n            sx={{ marginTop: 1, paddingY: 2 }}\r\n            className=\"\"\r\n          >\r\n            <Button\r\n              variant=\"contained\"\r\n              fullWidth\r\n              sx={{}}\r\n              onClick={handleSubmit}\r\n              disabled={shouldDisableButton}\r\n            >\r\n              FETCH\r\n            </Button>\r\n          </Grid>\r\n        </>\r\n      ) : (\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          sm={2}\r\n          md={2}\r\n          lg={2}\r\n          xl={2}\r\n          sx={{ marginTop: 1, paddingY: 2 }}\r\n          className=\"\"\r\n        >\r\n          <Button\r\n            variant=\"contained\"\r\n            fullWidth\r\n            sx={{}}\r\n            onClick={handleSubmit}\r\n            disabled={shouldDisableButton}\r\n          >\r\n            FETCH\r\n          </Button>\r\n        </Grid>\r\n      )}\r\n\r\n      <Grid item xs={12} sm={6} md={6} lg={8} xl={8}>\r\n        <Typography variant=\"h6\" color=\"text.secondary\">\r\n          Allowed : <span className=\"font-semibold text-black\">24/30</span>\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={12} sm={6} md={6} lg={4} xl={4} className=\"p-2 text-right\">\r\n        <Button variant=\"outlined\" sx={{}}>\r\n          <FileDownloadOutlinedIcon />\r\n          Download\r\n        </Button>\r\n      </Grid>\r\n\r\n      <Grid item xs={12} sm={6} md={6} lg={4} xl={12}>\r\n        <div style={{ height: 550, width: \"100%\" }}>\r\n          <DataGrid\r\n            rows={newArrayWithId}\r\n            rowHeight={60}\r\n            columns={columns}\r\n            initialState={{\r\n              pagination: {\r\n                paginationModel: { page: 0, pageSize: 5 },\r\n              },\r\n            }}\r\n            // style={customStyles.root}\r\n            sx={{\r\n              fontWeight: 400,\r\n              // width:300,\r\n              // height:\"820px\",\r\n              fontSize: 14,\r\n              borderRadius: 3,\r\n              // marginTop:5,\r\n              // paddingTop:5,\r\n              padding: 5,\r\n              // borderColor:\"#FFFFFF\",\r\n              borderColor: \"black\",\r\n              borderStyle: \"dashed\",\r\n\r\n              // marginRight:5,\r\n              paddingRight: 5,\r\n              \"& .MuiDataGrid-row\": {\r\n                height: 30,\r\n                border: 1,\r\n                borderColor: \"#EDEFF1\",\r\n                width: \"99.5%\",\r\n                // borderRight:1,\r\n                // marginRight:1,\r\n\r\n                marginTop: 1,\r\n                // paddingRight:5,\r\n                borderRadius: 2,\r\n              },\r\n              \"& .MuiDataGrid-columnHeaders\": {\r\n                // border: 1,\r\n                width: \"99.5%\",\r\n                marginBottom: 2,\r\n                // borderTop: 1,\r\n                // height:30,\r\n                boxShadow: 2,\r\n                backgroundColor: \"#F4F6F8\",\r\n                borderRadius: 3,\r\n              },\r\n              \"& .MuiDataGrid-footerContainer\": {\r\n                // border: 1\r\n              },\r\n              \"& .MuiTablePagination-selectLabel\": {\r\n                color: \"rgba(0, 54, 101, 0.6)\",\r\n              },\r\n              \"& .MuiSelect-select\": {\r\n                color: \"#003665\",\r\n              },\r\n              \"& .MuiTablePagination-displayedRows\": {\r\n                color: \"#003665\",\r\n              },\r\n              \"& .MuiSvgIcon-root\": {\r\n                color: \"#003665\",\r\n              },\r\n              \"&>.MuiDataGrid-main\": {\r\n                // '&>.MuiDataGrid-columnHeaders': {\r\n                //     borderBottom: 'none'\r\n                // },\r\n\r\n                \"& div div div div >.MuiDataGrid-cell\": {\r\n                  borderBottom: \"none\",\r\n                },\r\n              },\r\n            }}\r\n            // className=\"border border-black\"\r\n            // headerStyle={customStyles.header}\r\n            // cellStyle={customStyles.cell}\r\n            pageSizeOptions={[5, 10]}\r\n            disableRowSelectionOnClick\r\n          />\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default AttendanceReport;\r\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M16.59 7.58 10 14.17l-3.59-3.58L5 12l5 5 8-8zM12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2m0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8\"\n}), 'CheckCircleOutline');","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');"],"names":["duration","id","label","value","columns","field","headerName","width","disableColumnMenu","headerAlign","align","renderCell","params","_jsx","Grid","item","children","Typography","variant","headerClassName","style","whiteSpace","CheckCircleOutlineIcon","color","CloseIcon","type","_ref","_process$env$REACT_AP","Machines","ControllerGuid","rows","setRows","React","newArrayWithId","map","obj","index","MatchedItem","find","guid","currentDateTime","dayjs","format","currDate","FormattedpastDateTime","subtract","selectedDuration","setSelectedDuration","formState","setFormState","length","StartDate","EndDate","document","title","apiUrl","process","handleSubmit","async","url","data","response","fetch","method","headers","body","JSON","stringify","ok","errorResponse","json","Error","concat","status","message","result","error","console","TypeError","includes","alert","postData","formatDateTime","dateTime","shouldDisableButton","useEffect","prevFormState","twoHoursEarlier","OneDayEarlier","SevenDaysEarlier","_jsxs","container","spacing","className","xs","sm","md","lg","xl","TextField","select","sx","onChange","event","target","fullWidth","option","MenuItem","location","_Fragment","marginTop","LocalizationProvider","dateAdapter","AdapterDayjs","DemoContainer","components","DateTimePicker","newDate","paddingY","Button","onClick","disabled","FileDownloadOutlinedIcon","height","DataGrid","rowHeight","initialState","pagination","paginationModel","page","pageSize","fontWeight","fontSize","borderRadius","padding","borderColor","borderStyle","paddingRight","border","marginBottom","boxShadow","backgroundColor","borderBottom","pageSizeOptions","disableRowSelectionOnClick","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","default","jsx","d"],"sourceRoot":""}