{"version":3,"file":"static/js/717.e841e713.chunk.js","mappings":"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","sources":["components/Reports/MachineHealth/MachineHealth.tsx"],"sourcesContent":["import {\r\n  Box,\r\n  Button,\r\n  Grid,\r\n  MenuItem,\r\n  TextField,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport React, { useEffect } from \"react\";\r\nimport { AdapterDayjs } from \"@mui/x-date-pickers/AdapterDayjs\";\r\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\r\nimport { DateTimePicker } from \"@mui/x-date-pickers/DateTimePicker\";\r\nimport { DemoContainer } from \"@mui/x-date-pickers/internals/demo\";\r\nimport FileDownloadOutlinedIcon from \"@mui/icons-material/FileDownloadOutlined\";\r\nimport { Machine } from '../../../Interfaces/Interface';\r\nimport { DataGrid, GridColDef, GridRenderCellParams } from \"@mui/x-data-grid\";\r\nimport dayjs, { Dayjs } from \"dayjs\";\r\n\r\n\r\n\r\ninterface MachineHealthProps {\r\n  Machines: Machine[];\r\n  ControllerGuid?: string;\r\n\r\n}\r\ninterface FormState {\r\n  ControllerGuid: string;\r\n  StartDate: string;\r\n  EndDate: string;\r\n}\r\ninterface GetControllerHealth {\r\n  guid: string;\r\n  controllerGuid: string;\r\n  terminalIP: number;\r\n  location: string;\r\n  rfidSerial: string;\r\n  sewadarId: number;\r\n  attendanceDate: string;\r\n  isSynced: boolean;\r\n  dateSynced: string;\r\n}\r\nconst columns: GridColDef[] = [\r\n  {\r\n    field: \"Temperature\",\r\n    headerName: \"Temperature\",\r\n    width: 220,\r\n    disableColumnMenu: true,\r\n    headerAlign: \"center\",\r\n    align: \"center\",\r\n  },\r\n  {\r\n    field: \"Humidity\",\r\n    headerName: \"Humidity\",\r\n    width: 220,\r\n    disableColumnMenu: true,\r\n    headerAlign: \"center\",\r\n    align: \"center\",\r\n  },\r\n  {\r\n    field: \"CPU\",\r\n    headerName: \"CPU\",\r\n    width: 180,\r\n    disableColumnMenu: true,\r\n    headerClassName: \"text-center\",\r\n    headerAlign: \"center\",\r\n    align: \"center\",\r\n  },\r\n  {\r\n    field: \"RAM\",\r\n    headerName: \"RAM\",\r\n    width: 220,\r\n    disableColumnMenu: true,\r\n    headerClassName: \"text-center\",\r\n    headerAlign: \"center\",\r\n    align: \"center\",\r\n  },\r\n  // {\r\n  //   field: \"sewadarId\",\r\n  //   headerName: \"Sewadar Id\",\r\n  //   headerAlign: \"center\",\r\n  //   align: \"center\",\r\n  //   type: \"number\",\r\n  //   width: 220,\r\n  //   disableColumnMenu: true,\r\n  //   // renderCell: (params: GridRenderCellParams) => (\r\n  //   //   <div>\r\n  //   //     <Switch\r\n  //   //       checked={params.row.isValid}\r\n  //   //       // onChange={() => handleSwitchChange(params.row.id)}\r\n  //   //     />\r\n  //   //   </div>\r\n  //   // ),\r\n  //   renderCell: (params: GridRenderCellParams) => (\r\n  //     <div style={{ whiteSpace: \"nowrap\" }}>{params.value}</div>\r\n  //   ),\r\n  // },\r\n];\r\nconst duration = [\r\n  { id: 1, label: \"Last 2 hrs\", value: \"2hrs\" },\r\n  { id: 2, label: \"Last 24 hrs\", value: \"24hrs\" },\r\n  \r\n  { id: 3, label: \"Last 7 days\", value: \"7days\" },\r\n  { id: 4, label: \"Custom\", value: \"cust\" },\r\n];\r\n\r\nconst MachineHealth: React.FC<MachineHealthProps> = ({ Machines ,ControllerGuid}) => {\r\n  document.title = 'Machine Health';\r\n  const [rows, setRows] = React.useState<GetControllerHealth[]>([]);\r\n\r\n  const newArrayWithId = rows.map((obj, index) => ({\r\n    ...obj,\r\n    id: index + 1,\r\n  }));\r\n\r\n  const MatchedItem = Machines.find((item) => item.guid === ControllerGuid);\r\n\r\n  const currentDateTime = dayjs().format(\"YYYY-MM-DD HH:mm:ss\");\r\n  const currDate = dayjs();\r\n  const pastDateTime = currDate.subtract(2, \"hour\");\r\n  const FormattedpastDateTime = pastDateTime.format(\"YYYY-MM-DD HH:mm:ss\");\r\n  const [selectedDuration, setSelectedDuration] = React.useState(\r\n    duration[0].value\r\n  );\r\n\r\n  const [formState, setFormState] = React.useState<FormState>({\r\n    // ControllerGuid:     MatchedItem ? MatchedItem.guid : Machines[0].guid ,\r\n    ControllerGuid: MatchedItem\r\n      ? MatchedItem.guid\r\n      : Machines.length > 0\r\n      ? Machines[0].guid\r\n      : \"\",\r\n    // ControllerGuid: \"\",\r\n\r\n    StartDate: FormattedpastDateTime,\r\n    EndDate: currentDateTime,\r\n  });\r\n  const DurationChange = () => {\r\n    setFormState((prevFormState) => {\r\n      if (selectedDuration === \"2hrs\") {\r\n        const twoHoursEarlier = currDate.subtract(2, \"hour\");\r\n\r\n        return { ...prevFormState, StartDate: formatDateTime(twoHoursEarlier) };\r\n      } else if (selectedDuration === \"24hrs\") {\r\n        const OneDayEarlier = currDate.subtract(1, \"day\");\r\n\r\n        return { ...prevFormState, StartDate: formatDateTime(OneDayEarlier) };\r\n      } else if (selectedDuration === \"7days\") {\r\n        const SevenDaysEarlier = currDate.subtract(7, \"day\");\r\n\r\n        return {\r\n          ...prevFormState,\r\n          StartDate: formatDateTime(SevenDaysEarlier),\r\n        };\r\n      }\r\n\r\n      return prevFormState;\r\n    });\r\n  };\r\n  const handleDurationChange = (event: {\r\n    target: { value: React.SetStateAction<string> };\r\n  }) => {\r\n    setSelectedDuration(event.target.value);\r\n  };\r\n  const handleMachineChange = (event: { target: { value: string } }) => {\r\n    setFormState({ ...formState, ControllerGuid: event.target.value });\r\n  };\r\n  const host: string = process.env.REACT_APP_API_ENDPOINT ?? \"\";\r\n\r\n  const apiUrl: string = host + \"\";\r\n\r\n  async function postData(url: string, data: FormState): Promise<any> {\r\n    try {\r\n      const response = await fetch(url, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          // You can add other headers as needed\r\n        },\r\n        body: JSON.stringify(data),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorResponse = await response.json();\r\n        throw new Error(\r\n          `HTTP error! Status: ${response.status}. Message: ${errorResponse.message}`\r\n        );\r\n      }\r\n\r\n      const result = await response.json();\r\n      setRows(result.data);\r\n      return result;\r\n    } catch (error) {\r\n      console.error(\"Error:\", error);\r\n\r\n      if (\r\n        error instanceof TypeError &&\r\n        error.message.includes(\"Failed to fetch\")\r\n      ) {\r\n        console.error(\"Network error. Please check your internet connection.\");\r\n      }\r\n\r\n      alert(\"unable to fetch data\");\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  const handleSubmit = () => {\r\n    // DurationChange()\r\n    try {\r\n      // const result = postData(apiUrl, formState);\r\n    } catch (error) {\r\n      console.error(\"Error:\", error);\r\n    }\r\n  };\r\n\r\n  const handleToDateTimeChange = (newDate: Dayjs | null) => {\r\n    setFormState({ ...formState, EndDate: formatDateTime(newDate) });\r\n  };\r\n  const handleFromDateTimeChange = (newDate: Dayjs | null) => {\r\n    setFormState({ ...formState, StartDate: formatDateTime(newDate) });\r\n  };\r\n\r\n  const formatDateTime = (dateTime: Dayjs | null) => {\r\n    return dateTime ? dayjs(dateTime).format(\"YYYY-MM-DD HH:mm:ss\") : \"\";\r\n  };\r\n\r\n  const shouldDisableButton = formState.ControllerGuid.length <= 0;\r\n\r\n  useEffect(() => {\r\n    DurationChange();\r\n  }, [selectedDuration, rows]);\r\n\r\n \r\n  return (\r\n    <Grid container spacing={2} className=\" p-2\">\r\n    <Grid item xs={12} sm={4} md={4} lg={4} xl={2.5}>\r\n      <TextField\r\n        select\r\n        label=\"Machine\"\r\n        sx={{}}\r\n        value={formState.ControllerGuid}\r\n        onChange={handleMachineChange}\r\n        fullWidth\r\n      >\r\n        {Machines.map((option, index) => (\r\n          <MenuItem key={option.guid} value={option.guid}>\r\n            Machine {index + 1}&nbsp;{option.location}\r\n          </MenuItem>\r\n        ))}\r\n      </TextField>\r\n    </Grid>\r\n    <Grid item xs={12} sm={4} md={4} lg={4} xl={1.5}>\r\n      <TextField\r\n        select\r\n        label=\"Duration\"\r\n        value={selectedDuration}\r\n        onChange={handleDurationChange}\r\n        sx={{ width: \"100%\" }}\r\n        fullWidth\r\n      >\r\n        {duration.map((option) => (\r\n          <MenuItem key={option.id} value={option.value}>\r\n            {option.label}\r\n          </MenuItem>\r\n        ))}\r\n      </TextField>\r\n    </Grid>\r\n    {selectedDuration === \"cust\" ? (\r\n      <>\r\n        <Grid item xs={12} sm={2} md={2} lg={2} xl={3} sx={{ marginTop: -1 }}>\r\n          <LocalizationProvider dateAdapter={AdapterDayjs}>\r\n            <DemoContainer components={[\"DateTimePicker\"]}>\r\n              <DateTimePicker\r\n                label=\"From date\"\r\n                value={dayjs(formState.StartDate)}\r\n                onChange={handleFromDateTimeChange}\r\n              />\r\n            </DemoContainer>\r\n          </LocalizationProvider>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          sm={2}\r\n          md={2}\r\n          lg={2}\r\n          xl={3}\r\n          className=\"\"\r\n          sx={{ marginTop: -1 }}\r\n        >\r\n          <LocalizationProvider dateAdapter={AdapterDayjs}>\r\n            <DemoContainer components={[\"DateTimePicker\"]}>\r\n              <DateTimePicker\r\n                label=\"To date\"\r\n                value={dayjs(formState.EndDate)}\r\n                onChange={handleToDateTimeChange}\r\n              />\r\n            </DemoContainer>\r\n          </LocalizationProvider>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          sm={2}\r\n          md={2}\r\n          lg={2}\r\n          xl={1.5}\r\n          sx={{ marginTop: 1, paddingY: 2 }}\r\n          className=\"\"\r\n        >\r\n          <Button\r\n            variant=\"contained\"\r\n            fullWidth\r\n            sx={{}}\r\n            onClick={handleSubmit}\r\n            disabled={shouldDisableButton}\r\n          >\r\n            FETCH\r\n          </Button>\r\n        </Grid>\r\n      </>\r\n    ) : (\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        sm={2}\r\n        md={2}\r\n        lg={2}\r\n        xl={2}\r\n        sx={{ marginTop: 1, paddingY: 2 }}\r\n        className=\"\"\r\n      >\r\n        <Button\r\n          variant=\"contained\"\r\n          fullWidth\r\n          sx={{}}\r\n          onClick={handleSubmit}\r\n          disabled={shouldDisableButton}\r\n        >\r\n          FETCH\r\n        </Button>\r\n      </Grid>\r\n    )}\r\n\r\n    <Grid item xs={12} sm={6} md={6} lg={8} xl={8}>\r\n      \r\n    </Grid>\r\n    <Grid item xs={12} sm={6} md={6} lg={4} xl={4} className=\"p-2 text-right\">\r\n      <Button variant=\"outlined\" sx={{}}>\r\n        <FileDownloadOutlinedIcon />\r\n        Download\r\n      </Button>\r\n    </Grid>\r\n\r\n    <Grid item xs={12} sm={6} md={6} lg={4} xl={12}>\r\n      <div style={{ height: 550, width: \"100%\" }}>\r\n        <DataGrid\r\n          rows={newArrayWithId}\r\n          rowHeight={60}\r\n          columns={columns}\r\n          initialState={{\r\n            pagination: {\r\n              paginationModel: { page: 0, pageSize: 5 },\r\n            },\r\n          }}\r\n          // style={customStyles.root}\r\n          sx={{\r\n            fontWeight: 400,\r\n            // width:300,\r\n            // height:\"820px\",\r\n            fontSize: 14,\r\n            borderRadius: 3,\r\n            // marginTop:5,\r\n            // paddingTop:5,\r\n            padding: 5,\r\n            // borderColor:\"#FFFFFF\",\r\n            borderColor: \"black\",\r\n            borderStyle: \"dashed\",\r\n\r\n            // marginRight:5,\r\n            paddingRight: 5,\r\n            \"& .MuiDataGrid-row\": {\r\n              height: 30,\r\n              border: 1,\r\n              borderColor: \"#EDEFF1\",\r\n              width: \"99.5%\",\r\n              // borderRight:1,\r\n              // marginRight:1,\r\n\r\n              marginTop: 1,\r\n              // paddingRight:5,\r\n              borderRadius: 2,\r\n            },\r\n            \"& .MuiDataGrid-columnHeaders\": {\r\n              // border: 1,\r\n              width: \"99.5%\",\r\n              marginBottom: 2,\r\n              // borderTop: 1,\r\n              // height:30,\r\n              boxShadow: 2,\r\n              backgroundColor: \"#F4F6F8\",\r\n              borderRadius: 3,\r\n            },\r\n            \"& .MuiDataGrid-footerContainer\": {\r\n              // border: 1\r\n            },\r\n            \"& .MuiTablePagination-selectLabel\": {\r\n              color: \"rgba(0, 54, 101, 0.6)\",\r\n            },\r\n            \"& .MuiSelect-select\": {\r\n              color: \"#003665\",\r\n            },\r\n            \"& .MuiTablePagination-displayedRows\": {\r\n              color: \"#003665\",\r\n            },\r\n            \"& .MuiSvgIcon-root\": {\r\n              color: \"#003665\",\r\n            },\r\n            \"&>.MuiDataGrid-main\": {\r\n              // '&>.MuiDataGrid-columnHeaders': {\r\n              //     borderBottom: 'none'\r\n              // },\r\n\r\n              \"& div div div div >.MuiDataGrid-cell\": {\r\n                borderBottom: \"none\",\r\n              },\r\n            },\r\n          }}\r\n          // className=\"border border-black\"\r\n          // headerStyle={customStyles.header}\r\n          // cellStyle={customStyles.cell}\r\n          pageSizeOptions={[5, 10]}\r\n          disableRowSelectionOnClick\r\n        />\r\n      </div>\r\n    </Grid>\r\n  </Grid>\r\n  );\r\n};\r\n\r\nexport default MachineHealth;\r\n"],"names":["columns","field","headerName","width","disableColumnMenu","headerAlign","align","headerClassName","duration","id","label","value","_ref","_process$env$REACT_AP","Machines","ControllerGuid","document","title","rows","setRows","React","newArrayWithId","map","obj","index","MatchedItem","find","item","guid","currentDateTime","dayjs","format","currDate","FormattedpastDateTime","subtract","selectedDuration","setSelectedDuration","formState","setFormState","length","StartDate","EndDate","process","handleSubmit","formatDateTime","dateTime","shouldDisableButton","useEffect","prevFormState","twoHoursEarlier","OneDayEarlier","SevenDaysEarlier","_jsxs","Grid","container","spacing","className","children","_jsx","xs","sm","md","lg","xl","TextField","select","sx","onChange","event","target","fullWidth","option","MenuItem","location","_Fragment","marginTop","LocalizationProvider","dateAdapter","AdapterDayjs","DemoContainer","components","DateTimePicker","newDate","paddingY","Button","variant","onClick","disabled","FileDownloadOutlinedIcon","style","height","DataGrid","rowHeight","initialState","pagination","paginationModel","page","pageSize","fontWeight","fontSize","borderRadius","padding","borderColor","borderStyle","paddingRight","border","marginBottom","boxShadow","backgroundColor","color","borderBottom","pageSizeOptions","disableRowSelectionOnClick"],"sourceRoot":""}